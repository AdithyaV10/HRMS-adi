[tool.poetry]
name = "hrms-project"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.0.1"
commitizen = "^3.13.0"
pre-commit = "^3.6.0"
django-crispy-forms = "^2.1"
crispy-bootstrap4 = "^2023.1"
pillow = "^10.2.0"
pylint = "^3.0.3"
pylint-django = "^2.5.5"


[tool.flake8]
max-line-length = 88
max-complexity = 12
ignore = ["E402","E501","W503"]

[tool.pylint]
load-plugins = ["pylint_django"]
django-settings-module = "HRMS.settings"

[tool.pylint.MESSAGE_CONTROL]
disable = """
    too-many-locals,
    line-too-long,
    abstract-method,
    no-member,
    missing-module-docstring,
    missing-class-docstring,
    too-many-ancestors,
    too-few-public-methods,
    missing-function-docstring,
    broad-exception-caught,
    protected-access,
    duplicate-code,
    return-in-init
"""
enable = "useless-suppression"

[tool.pylint.REPORTS]
reports="no"

[tool.pylint.FORMAT]
max-line-length="88"

[tool.pylint.BASIC]
good-names = "_,i,e,setUp,tearDown,maxDiff"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
default_section = "THIRDPARTY"
known_first_party = []
known_third_party = ["django", "rest_framework"]

[tool.bandit]
exclude_dirs = ["tests"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

[tool.pytest]
DJANGO_SETTINGS_MODULE = "HRMS.settings"

[tool.mypy]
plugins = ["mypy_django_plugin.main","mypy_drf_plugin.main"]

[tool.django-stubs]
django_settings_module = "HRMS.settings"




[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
